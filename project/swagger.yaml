openapi: 3.0.0
info:
  title: Flask API
  description: API for user authentication, posts, and likes
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /ping:
    get:
      description: New endpoint
      responses:
        200:
          description: New response
          content:
            application/json:
              schema:
                :
    get:
      summary: Check server status
      responses:
        '200':
          description: Server is running

  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '400':
          description: Missing credentials
        '401':
          description: Incorrect password
        '404':
          description: User not found

  /logout:
    delete:
      summary: User logout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_id:
                  type: string
      responses:
        '200':
          description: Logout successful
        '401':
          description: Invalid session_id

  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
        '401':
          description: Invalid session_id

  /user/{id}:
    get:
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User found
        '404':
          description: User not found
        '401':
          description: Invalid session_id
    delete:
      summary: Delete user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted
        '401':
          description: Invalid session_id
        '404':
          description: User not found

  /user:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created
        '400':
          description: Missing fields

  /posts:
    get:
      summary: Get all posts
      responses:
        '200':
          description: List of posts
        '401':
          description: Invalid session_id

  /post/{id}:
    get:
      summary: Get post by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Post found
        '404':
          description: Post not found
        '401':
          description: Invalid session_id
    put:
      summary: Update post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Post updated
        '400':
          description: Missing fields
        '404':
          description: Post not found
        '401':
          description: Unauthorized
    delete:
      summary: Delete post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Post deleted
        '401':
          description: Unauthorized
        '404':
          description: Post not found

  /post:
    post:
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Post created
        '400':
          description: Missing fields
        '401':
          description: Invalid session_id

  /like/{post_id}:
    put:
      summary: Like a post
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Like added
        '200':
          description: Already liked
        '400':
          description: Missing user_id
        '404':
          description: Post not found
        '401':
          description: Invalid session_id

  /unlike/{post_id}:
    delete:
      summary: Unlike a post
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Unlike removed
        '400':
          description: Missing user_id
        '404':
          description: Post not found
        '401':
          description: Invalid session_id
